% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sen2_processing.R
\name{downloadS2}
\alias{downloadS2}
\title{Download Sentinel-2 data (L1A) from the public GoogleCloud Bucket}
\usage{
downloadS2(
  aoi = NULL,
  time_window = c("2016-06-01", "2019-09-30"),
  rootdir = ".",
  extent_name = "projectname",
  max_cloud = 100,
  time_period = "seasonal",
  use_db = TRUE,
  force_update = FALSE,
  query_only = FALSE,
  create_cloudmask = TRUE
)
}
\arguments{
\item{aoi}{An \code{sf} or \code{Spatial} object with the extent for which to
download S2 data. Note that only its bounding box is going to be used to
determine the final extent.}

\item{time_window}{A length two character specifying the time interval to be
downloaded in the form of \code{YYYY-MM-DD}. In cases where the years of the
start year and end year differ and he option \code{time_period = "seasonal"},
data will be downloaded for the specified season for all years in the interval.
Otherwise, when \code{time_period = "all"}, the complete interval will be downloaded.}

\item{rootdir}{A character vector of length 1 indicating and existing directory
either relative or absolute. Based on the value in \code{extent_name} a
subdirectory will be created within \code{rootdir} where the data
will be written to. Default is to the current directory ".".}

\item{extent_name}{A character vector of length 1 specifying the name of the
subdirectory within rootdir where the data will be downloaded. This variable
makes it easy to distinguish between different projects.}

\item{max_cloud}{A integer vector of length 1 indicating the percentage of cloud
cover in the scenes which will be considered for download. Any scene with a
cloud cover higher than this value will not be downloaded.}

\item{time_period}{A length one character specifying the download behavior in
terms of the time_window variable. In cases where \code{time_period = "seasonal"}
the data will be downloaded seasonally between the start year and end year.
When \code{time_period = "full"} the complete interval will be downloaded.}

\item{use_db}{A logical parameter indicating if the tile index
should be saved locally as an SQLite database. This significantly
speeds up future queries but also increases the local disk
space used (from about 2 GB to 5 GB). The default value is \code{TRUE}.}

\item{force_update}{A logical parameter indicating if the
latest version of the tile index should be downloaded from
the Google Cloud. The default value is \code{FALSE}.}

\item{query_only}{A logical parameter indication if the data should be downloaded
or if the query only should be processed. The default value is \code{FALSE},
in case it is \code{TRUE} the function will return a dataframe with
information about the matching scenes.}

\item{create_cloudmask}{A logical indicating if a cloud mask should be created
during download. Defaults to \code{TRUE}.}
}
\value{
A character vector of variable length corresponding to the original \code{SAFE} name
  of successfully downloaded data which fall into the scope of the query specified
  by extent and timewindow and possibly also footprint check.
}
\description{
Download Sentinel-2 data (L1A) from the public GoogleCloud Bucket
}
\note{
For downloading from the public Sentinel-2 data bucket \code{gsutil} is used.
  This needs to be installed in advance and the path to the binary should be made
  available in the environment variable. Additionally, before downloading
  you have to log in with a Google account using \code{gcloud init} in the command
  line. Users are advised to use the provided Dockerfile to create an image and
  run \code{sen2tool} in a container. This Dockerfile automatically installs
  all required external dependencies such as \code{gsutils} and \code{gdal} binaries.
}
\author{
Darius Görgen, Dr. Fabian Löw (MapTailor Geospatial Consulting GbR) \email{info@maptailor.net}
\cr
\emph{Maintainer:} KfW FZ Evaluierung \email{FZ-Evaluierung@kfw.de}
\cr
\emph{Contact Person:} Dr. Johannes Schielein
\cr
\emph{Copyright:} KfW Bankengruppe
\cr
\emph{License:} GPL-3
}
